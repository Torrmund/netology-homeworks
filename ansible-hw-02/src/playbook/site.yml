---
- name: Install Clickhouse
  become: true
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
  tasks:
    - name: Install dependencies for itself
      ansible.builtin.apt:
        name:
          - python3-apt
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
        state: present
        update_cache: true

    - name: Add clickhouse GPG key
      ansible.builtin.get_url:
        url: "{{ clickhouse_gpg_key_url }}"
        dest: /tmp/clickhouse_key
        mode: '0644'

    - name: Convert GPG key to GPG format
      ansible.builtin.command:
        cmd: "gpg -o /usr/share/keyrings/clickhouse-keyring.gpg --dearmor /tmp/clickhouse_key"
      args:
        creates: /usr/share/keyrings/clickhouse-keyring.gpg

    - name: Add clickhouse deb repository
      ansible.builtin.lineinfile:
        path: /etc/apt/sources.list.d/clickhouse.list
        line: 'deb [signed-by=/usr/share/keyrings/clickhouse-keyring.gpg] {{ clickhouse_repo_url }} stable main'
        create: true
        mode: '0644'

    - name: Update packages list
      ansible.builtin.apt:
        update_cache: true

    - name: Install clickhouse
      ansible.builtin.apt:
        name: "{{ item }}={{ clickhouse_version }}"
        state: present
      with_items: "{{ clickhouse_packages }}"
      register: install_ch
      notify: Start clickhouse service

    - name: Ensure clickhouse-server systemd enabled & started
      ansible.builtin.systemd:
        name: clickhouse-server
        enabled: true
        daemon_reload: true
        state: started

    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=82
      changed_when: create_db.rc == 0

- name: Install Vector
  become: true
  hosts: all
  handlers:
    - name: Restart vector service
      become: true
      ansible.builtin.service:
        name: vector
        state: restarted
  tasks:
    - name: Create Vector user
      ansible.builtin.user:
        name: vector
        state: present
        shell: /bin/bash

    - name: Downlaod Vector
      ansible.builtin.get_url:
        url: https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-x86_64-unknown-linux-gnu.tar.gz
        dest: /tmp/vector.tar.gz
        mode: "0644"

    - name: Extract Vector
      ansible.builtin.unarchive:
        src: /tmp/vector.tar.gz
        dest: /tmp/
        remote_src: true

    - name: Copy Vector binary
      ansible.builtin.copy:
        src: /tmp/vector-x86_64-unknown-linux-gnu/bin/vector
        dest: /usr/bin/vector
        mode: '0755'
        remote_src: true
        owner: vector
        group: vector

    - name: Create vector config directory
      ansible.builtin.file:
        path: /etc/vector
        state: directory
        owner: vector
        group: vector
        mode: "0755"

    - name: Create vector data directory
      ansible.builtin.file:
        path: /var/lib/vector
        state: directory
        owner: vector
        group: vector
        mode: "0755"

    - name: Generate Vector configuration
      ansible.builtin.template:
        src: vector-config.yaml.j2
        dest: /etc/vector/vector.yaml
        mode: "0644"
        owner: vector
        group: vector
      notify: Restart vector service

    - name: Ensure systemd vector service exist
      ansible.builtin.template:
        src: vector.service.j2
        dest: "/etc/systemd/system/vector.service"
        force: true
        mode: "0644"

    - name: Ensure Vector systemd enabled & started
      ansible.builtin.systemd:
        name: vector.service
        enabled: true
        daemon_reload: true
        state: started
